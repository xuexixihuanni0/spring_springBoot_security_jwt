<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <!-- security:http ：spring过滤器链配置可以配置如下：
            1）需要拦截什么资源
            2）什么资源什么角色权限
            3）定义认证方式：HttpBasic、Fromlogin(*)
            4)定义登录页面，定义登录请求地址，定义错误处理方式
        -->
    <security:http>
        <!-- pattern: 需要拦截的资源
             access：拦截方式
                    isFullyAuthenticated()该资源需要认证才可以访问
                    isAnonymous:匿名用户（未登录）才可以访问，已经登录的无法访问
                    permitAll:所有用户（不管是否登录）都可以访问
                    hasRole:拥有什么角色才可以访问
             -->
        <security:intercept-url pattern="/user/login" access="permitAll()"/>
        <security:intercept-url pattern="/user/index" access="permitAll()"/>
        <security:intercept-url pattern="/user/list" access="hasRole('ROLE_USER1')"/>
        <security:intercept-url pattern="/user/update" access="hasRole('ROLE_USER1')"/>
        <security:intercept-url pattern="/user/add" access="hasRole('ROLE_USER2')"/>
        <security:intercept-url pattern="/user/delete" access="hasRole('ROLE_USER2')"/>
        <security:intercept-url pattern="/**" access="isFullyAuthenticated()"/>


        <!-- 使用htttpBasic的方式进行登录认证 -->
        <!--<security:http-basic/>-->

        <!-- 使用form-login的方式进行登录认证 -->
        <security:form-login login-page="/user/login"
                             authentication-success-handler-ref="myAuthenticationSuccessHandler"
                             authentication-failure-handler-ref="myAuthenticationFailureHandler"/>

        <!--access-denied-handler访问被拒绝后的跳转页面-->
        <security:access-denied-handler error-page="/user/accessDenied" />


        <!-- 关闭csrf防护 -->
        <security:csrf disabled="true"/>

    </security:http>

    <!-- security:authentication-manager：认证管理器
            1）认证信息的提供方式（账户名，密码，当前用户权限），可以使用配置写死，也可以连接数据库
            -->
    <security:authentication-manager>
        <!--硬编码写死-->
        <security:authentication-provider user-service-ref="myUserDetailsService">

        </security:authentication-provider>
    </security:authentication-manager>

</beans>